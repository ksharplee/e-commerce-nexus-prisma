### This file was generated by Nexus Schema
### Do not make changes to this file directly


input CategoriesFrontendOnBackendCreateManyCategoryBackendInput {
  createdAt: DateTime
  frontendId: Int!
  updatedAt: DateTime
}

input CategoriesFrontendOnBackendCreateManyCategoryBackendInputEnvelope {
  data: [CategoriesFrontendOnBackendCreateManyCategoryBackendInput!]
  skipDuplicates: Boolean
}

input CategoriesFrontendOnBackendCreateManyCategoryFrontendInput {
  backendId: Int!
  createdAt: DateTime
  updatedAt: DateTime
}

input CategoriesFrontendOnBackendCreateManyCategoryFrontendInputEnvelope {
  data: [CategoriesFrontendOnBackendCreateManyCategoryFrontendInput!]
  skipDuplicates: Boolean
}

input CategoriesFrontendOnBackendCreateNestedManyWithoutCategoryBackendInput {
  connect: [CategoriesFrontendOnBackendWhereUniqueInput!]
  connectOrCreate: [CategoriesFrontendOnBackendCreateOrConnectWithoutCategoryBackendInput!]
  create: [CategoriesFrontendOnBackendCreateWithoutCategoryBackendInput!]
  createMany: CategoriesFrontendOnBackendCreateManyCategoryBackendInputEnvelope
}

input CategoriesFrontendOnBackendCreateNestedManyWithoutCategoryFrontendInput {
  connect: [CategoriesFrontendOnBackendWhereUniqueInput!]
  connectOrCreate: [CategoriesFrontendOnBackendCreateOrConnectWithoutCategoryFrontendInput!]
  create: [CategoriesFrontendOnBackendCreateWithoutCategoryFrontendInput!]
  createMany: CategoriesFrontendOnBackendCreateManyCategoryFrontendInputEnvelope
}

input CategoriesFrontendOnBackendCreateOrConnectWithoutCategoryBackendInput {
  create: CategoriesFrontendOnBackendCreateWithoutCategoryBackendInput!
  where: CategoriesFrontendOnBackendWhereUniqueInput!
}

input CategoriesFrontendOnBackendCreateOrConnectWithoutCategoryFrontendInput {
  create: CategoriesFrontendOnBackendCreateWithoutCategoryFrontendInput!
  where: CategoriesFrontendOnBackendWhereUniqueInput!
}

input CategoriesFrontendOnBackendCreateWithoutCategoryBackendInput {
  categoryFrontend: CategoryFrontendCreateNestedOneWithoutCategoriesInput!
  createdAt: DateTime
  updatedAt: DateTime
}

input CategoriesFrontendOnBackendCreateWithoutCategoryFrontendInput {
  categoryBackend: CategoryBackendCreateNestedOneWithoutCategoriesInput!
  createdAt: DateTime
  updatedAt: DateTime
}

input CategoriesFrontendOnBackendFrontendIdBackendIdCompoundUniqueInput {
  backendId: Int!
  frontendId: Int!
}

input CategoriesFrontendOnBackendWhereUniqueInput {
  frontendId_backendId: CategoriesFrontendOnBackendFrontendIdBackendIdCompoundUniqueInput
}

type CategoryBackend {
  createdAt: DateTime!
  id: Int!
  level: Int!
  name: String!
  parentId: Int
  show: Boolean!
  updatedAt: DateTime!
}

input CategoryBackendCreateInput {
  categories: CategoriesFrontendOnBackendCreateNestedManyWithoutCategoryBackendInput
  children: CategoryBackendCreateNestedManyWithoutParentInput
  createdAt: DateTime
  level: Int
  name: String!
  parent: CategoryBackendCreateNestedOneWithoutChildrenInput
  show: Boolean
  updatedAt: DateTime
}

input CategoryBackendCreateManyParentInput {
  createdAt: DateTime
  id: Int
  level: Int
  name: String!
  show: Boolean
  updatedAt: DateTime
}

input CategoryBackendCreateManyParentInputEnvelope {
  data: [CategoryBackendCreateManyParentInput!]
  skipDuplicates: Boolean
}

input CategoryBackendCreateNestedManyWithoutParentInput {
  connect: [CategoryBackendWhereUniqueInput!]
  connectOrCreate: [CategoryBackendCreateOrConnectWithoutParentInput!]
  create: [CategoryBackendCreateWithoutParentInput!]
  createMany: CategoryBackendCreateManyParentInputEnvelope
}

input CategoryBackendCreateNestedOneWithoutCategoriesInput {
  connect: CategoryBackendWhereUniqueInput
  connectOrCreate: CategoryBackendCreateOrConnectWithoutCategoriesInput
  create: CategoryBackendCreateWithoutCategoriesInput
}

input CategoryBackendCreateNestedOneWithoutChildrenInput {
  connect: CategoryBackendWhereUniqueInput
  connectOrCreate: CategoryBackendCreateOrConnectWithoutChildrenInput
  create: CategoryBackendCreateWithoutChildrenInput
}

input CategoryBackendCreateOrConnectWithoutCategoriesInput {
  create: CategoryBackendCreateWithoutCategoriesInput!
  where: CategoryBackendWhereUniqueInput!
}

input CategoryBackendCreateOrConnectWithoutChildrenInput {
  create: CategoryBackendCreateWithoutChildrenInput!
  where: CategoryBackendWhereUniqueInput!
}

input CategoryBackendCreateOrConnectWithoutParentInput {
  create: CategoryBackendCreateWithoutParentInput!
  where: CategoryBackendWhereUniqueInput!
}

input CategoryBackendCreateWithoutCategoriesInput {
  children: CategoryBackendCreateNestedManyWithoutParentInput
  createdAt: DateTime
  level: Int
  name: String!
  parent: CategoryBackendCreateNestedOneWithoutChildrenInput
  show: Boolean
  updatedAt: DateTime
}

input CategoryBackendCreateWithoutChildrenInput {
  categories: CategoriesFrontendOnBackendCreateNestedManyWithoutCategoryBackendInput
  createdAt: DateTime
  level: Int
  name: String!
  parent: CategoryBackendCreateNestedOneWithoutChildrenInput
  show: Boolean
  updatedAt: DateTime
}

input CategoryBackendCreateWithoutParentInput {
  categories: CategoriesFrontendOnBackendCreateNestedManyWithoutCategoryBackendInput
  children: CategoryBackendCreateNestedManyWithoutParentInput
  createdAt: DateTime
  level: Int
  name: String!
  show: Boolean
  updatedAt: DateTime
}

input CategoryBackendWhereUniqueInput {
  id: Int
}

input CategoryFrontendCreateManyParentInput {
  createdAt: DateTime
  icon: String
  id: Int
  image: String
  name: String!
  show: Boolean
  updatedAt: DateTime
}

input CategoryFrontendCreateManyParentInputEnvelope {
  data: [CategoryFrontendCreateManyParentInput!]
  skipDuplicates: Boolean
}

input CategoryFrontendCreateNestedManyWithoutParentInput {
  connect: [CategoryFrontendWhereUniqueInput!]
  connectOrCreate: [CategoryFrontendCreateOrConnectWithoutParentInput!]
  create: [CategoryFrontendCreateWithoutParentInput!]
  createMany: CategoryFrontendCreateManyParentInputEnvelope
}

input CategoryFrontendCreateNestedOneWithoutCategoriesInput {
  connect: CategoryFrontendWhereUniqueInput
  connectOrCreate: CategoryFrontendCreateOrConnectWithoutCategoriesInput
  create: CategoryFrontendCreateWithoutCategoriesInput
}

input CategoryFrontendCreateNestedOneWithoutChildrenInput {
  connect: CategoryFrontendWhereUniqueInput
  connectOrCreate: CategoryFrontendCreateOrConnectWithoutChildrenInput
  create: CategoryFrontendCreateWithoutChildrenInput
}

input CategoryFrontendCreateOrConnectWithoutCategoriesInput {
  create: CategoryFrontendCreateWithoutCategoriesInput!
  where: CategoryFrontendWhereUniqueInput!
}

input CategoryFrontendCreateOrConnectWithoutChildrenInput {
  create: CategoryFrontendCreateWithoutChildrenInput!
  where: CategoryFrontendWhereUniqueInput!
}

input CategoryFrontendCreateOrConnectWithoutParentInput {
  create: CategoryFrontendCreateWithoutParentInput!
  where: CategoryFrontendWhereUniqueInput!
}

input CategoryFrontendCreateWithoutCategoriesInput {
  children: CategoryFrontendCreateNestedManyWithoutParentInput
  createdAt: DateTime
  icon: String
  image: String
  name: String!
  parent: CategoryFrontendCreateNestedOneWithoutChildrenInput
  show: Boolean
  updatedAt: DateTime
}

input CategoryFrontendCreateWithoutChildrenInput {
  categories: CategoriesFrontendOnBackendCreateNestedManyWithoutCategoryFrontendInput
  createdAt: DateTime
  icon: String
  image: String
  name: String!
  parent: CategoryFrontendCreateNestedOneWithoutChildrenInput
  show: Boolean
  updatedAt: DateTime
}

input CategoryFrontendCreateWithoutParentInput {
  categories: CategoriesFrontendOnBackendCreateNestedManyWithoutCategoryFrontendInput
  children: CategoryFrontendCreateNestedManyWithoutParentInput
  createdAt: DateTime
  icon: String
  image: String
  name: String!
  show: Boolean
  updatedAt: DateTime
}

input CategoryFrontendWhereUniqueInput {
  id: Int
}

scalar DateTime

type Mutation {
  createOneCategoryBackend(data: CategoryBackendCreateInput!): CategoryBackend!
}

type Query {
  categoriesBackend: [CategoryBackend]!
}
